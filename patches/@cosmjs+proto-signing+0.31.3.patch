diff --git a/node_modules/@cosmjs/proto-signing/build/signer.d.ts b/node_modules/@cosmjs/proto-signing/build/signer.d.ts
index 71d6f72..db38b59 100644
--- a/node_modules/@cosmjs/proto-signing/build/signer.d.ts
+++ b/node_modules/@cosmjs/proto-signing/build/signer.d.ts
@@ -19,5 +19,25 @@ export interface OfflineDirectSigner {
     readonly getAccounts: () => Promise<readonly AccountData[]>;
     readonly signDirect: (signerAddress: string, signDoc: SignDoc) => Promise<DirectSignResponse>;
 }
-export type OfflineSigner = OfflineAminoSigner | OfflineDirectSigner;
+
+export interface OfflineEip191Signer {
+    /**
+     * Get AccountData array from wallet. Rejects if not enabled.
+     */
+    readonly getAccounts: () => Promise<readonly AccountData[]>;
+    /**
+     * Request signature from whichever key corresponds to provided bech32-encoded address. Rejects if not enabled.
+     *
+     * The signer implementation may offer the user the ability to override parts of the signDoc. It must
+     * return the doc that was signed in the response.
+     *
+     * @param signerAddress The address of the account that should sign the transaction
+     * @param signDoc The content that should be signed
+     */
+    readonly signEip191: (signerAddress: string, signDoc: StdSignDoc) => Promise<AminoSignResponse>;
+}
+
+export type OfflineSigner = OfflineAminoSigner | OfflineDirectSigner |OfflineEip191Signer;
+
 export declare function isOfflineDirectSigner(signer: OfflineSigner): signer is OfflineDirectSigner;
+export declare function isOfflineEip191Signer(signer: OfflineSigner): signer is OfflineEip191Signer;
diff --git a/node_modules/@cosmjs/proto-signing/build/signer.js b/node_modules/@cosmjs/proto-signing/build/signer.js
index 5f3b8ee..2256cf9 100644
--- a/node_modules/@cosmjs/proto-signing/build/signer.js
+++ b/node_modules/@cosmjs/proto-signing/build/signer.js
@@ -5,4 +5,10 @@ function isOfflineDirectSigner(signer) {
     return signer.signDirect !== undefined;
 }
 exports.isOfflineDirectSigner = isOfflineDirectSigner;
+
+exports.isOfflineEip191Signer = void 0;
+function isOfflineEip191Signer(signer) {
+    return signer.signEip191 !== undefined;
+}
+exports.isOfflineEip191Signer = isOfflineEip191Signer;
 //# sourceMappingURL=signer.js.map
